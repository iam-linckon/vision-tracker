---
- name: Docker login to Docker Hub
  community.docker.docker_login:
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password | default(omit) }}"
  no_log: true

- name: Build and push API image (multi-arch) with buildx
  shell: |
    set -euo pipefail
    docker buildx build \
      --builder {{ docker_builder_name }} \
      --platform {{ docker_platforms | join(',') }} \
      --file {{ api_dockerfile }} \
      --label org.opencontainers.image.version={{ image_version }} \
      {{ api_build_args | dict2items | map('join', '=') | map('regex_replace', '^(.*)$', '--build-arg \1') | join(' ') }} \
      --tag {{ api_image_name }}:{{ image_version }} \
      --push \
      {{ api_context }}
  args:
    executable: /bin/bash

- name: Optionally tag API :latest manifest
  when: image_latest | default(false)
  shell: |
    set -euo pipefail
    docker buildx imagetools create \
      -t {{ api_image_name }}:latest \
      {{ api_image_name }}:{{ image_version }}
  args:
    executable: /bin/bash

- name: Build and push Client image (multi-arch) with buildx
  shell: |
    set -euo pipefail
    docker buildx build \
      --builder {{ docker_builder_name }} \
      --platform {{ docker_platforms | join(',') }} \
      --file {{ client_dockerfile }} \
      --label org.opencontainers.image.version={{ image_version }} \
      {{ client_build_args | dict2items | map('join', '=') | map('regex_replace', '^(.*)$', '--build-arg \1') | join(' ') }} \
      --tag {{ client_image_name }}:{{ image_version }} \
      --push \
      {{ client_context }}
  args:
    executable: /bin/bash

- name: Optionally tag Client :latest manifest
  when: image_latest | default(false)
  shell: |
    set -euo pipefail
    docker buildx imagetools create \
      -t {{ client_image_name }}:latest \
      {{ client_image_name }}:{{ image_version }}
  args:
    executable: /bin/bash